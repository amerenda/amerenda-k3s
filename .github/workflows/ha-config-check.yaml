name: Home Assistant Configuration Check

on:
  push:
    branches: [ main ]
    paths:
      - 'gitops/apps/home-assistant/**'
      - '.github/workflows/ha-config-check.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - 'gitops/apps/home-assistant/**'
      - '.github/workflows/ha-config-check.yaml'

jobs:
  yaml-lint:
    name: YAML Lint
    runs-on: arc-runner-set
    # Run on PRs and pushes to main
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run yamllint
        uses: ibiqlik/action-yamllint@v3
        with:
          config_file: .yamllint.yaml
          yamllint_file_or_dir: gitops/apps/home-assistant/
          yamllint_strict: true
          yamllint_comment: true

  ha-config-check:
    name: Home Assistant Configuration Check
    runs-on: arc-runner-set
    needs: yaml-lint
    # Run on PRs and pushes to main
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Home Assistant
        uses: frenck/action-home-assistant@v1
        with:
          ha_version: ${{ env.HA_VERSION }}

      - name: Prepare Home Assistant configuration
        run: |
          # Create a temporary HA config directory
          mkdir -p /tmp/ha-config
          
          # Copy HA source files to config directory
          cp -r gitops/apps/home-assistant/automations/* /tmp/ha-config/ 2>/dev/null || true
          cp -r gitops/apps/home-assistant/blueprints/* /tmp/ha-config/ 2>/dev/null || true
          cp -r gitops/apps/home-assistant/packages/* /tmp/ha-config/ 2>/dev/null || true
          cp -r gitops/apps/home-assistant/scripts/* /tmp/ha-config/ 2>/dev/null || true
          cp -r gitops/apps/home-assistant/dashboards/* /tmp/ha-config/ 2>/dev/null || true
          
          # Create basic configuration.yaml
          cat > /tmp/ha-config/configuration.yaml << 'EOF'
          # Loads default set of integrations. Do not remove.
          default_config: {}
          
          # Load UI-managed files for Automations & Scenes
          automation: !include automations.yaml
          scene: !include scenes.yaml
          
          # Scripts managed as separate files
          script: !include_dir_merge_named scripts
          
          # Input helpers
          input_boolean:  !include_dir_merge_named helpers/input_boolean/
          input_datetime: !include_dir_merge_named helpers/input_datetime/
          input_select:   !include_dir_merge_named helpers/input_select/
          input_number:   !include_dir_merge_named helpers/input_number/
          input_text:     !include_dir_merge_named helpers/input_text/
          
          # Packages
          homeassistant:
            packages: !include_dir_named packages
          EOF
          
          # Create empty UI files
          echo "[]" > /tmp/ha-config/automations.yaml
          echo "[]" > /tmp/ha-config/scenes.yaml
          echo "{}" > /tmp/ha-config/scripts.yaml
          
          # Create helper directories
          mkdir -p /tmp/ha-config/helpers/input_boolean
          mkdir -p /tmp/ha-config/helpers/input_datetime
          mkdir -p /tmp/ha-config/helpers/input_select
          mkdir -p /tmp/ha-config/helpers/input_number
          mkdir -p /tmp/ha-config/helpers/input_text
          mkdir -p /tmp/ha-config/packages
          
          # Copy helper files
          find gitops/apps/home-assistant/packages/helpers/generated -name "*.yaml" -exec cp {} /tmp/ha-config/helpers/ \;
          
          # Copy package files
          find gitops/apps/home-assistant/packages -name "*.yaml" -not -path "*/generated/*" -exec cp {} /tmp/ha-config/packages/ \;

      - name: Run Home Assistant configuration check
        run: |
          # Set HA config directory
          export HA_CONFIG_DIR=/tmp/ha-config
          
          # Run configuration check
          hass --script check_config --config "$HA_CONFIG_DIR"

      - name: Run hassfest (if custom_components exist)
        if: contains(github.event.head_commit.modified, 'custom_components') || contains(github.event.head_commit.added, 'custom_components')
        run: |
          if [ -d "gitops/apps/home-assistant/custom_components" ]; then
            pip install hassfest
            hassfest gitops/apps/home-assistant/
          else
            echo "No custom_components directory found, skipping hassfest"
          fi

  env:
    HA_VERSION: "2024.10.0"
