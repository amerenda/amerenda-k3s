room_toggle:
  alias: Room Toggle (smart)
  mode: parallel
  fields:
    room_key:
      description: Short name used in scene IDs (e.g., 'living_room')
      example: living_room
    target_lights:
      description: Entity or group of lights to control
      example: light.living_room_lights
  sequence:
    - variables:
        # Accept string, list, or target dict; normalize to list of entity_ids
        _entities: >-
          {% if target_lights is mapping and 'entity_id' in target_lights %}
            {{ target_lights.entity_id }}
          {% else %}
            {{ target_lights }}
          {% endif %}
        lights: >-
          {% if _entities is string %}
            {{ expand([_entities]) }}
          {% elif _entities is sequence %}
            {{ expand(_entities) }}
          {% else %}
            {{ expand([]) }}
          {% endif %}
        any_on: "{{ lights | selectattr('state','eq','on') | list | count > 0 }}"
    - choose:
        - conditions: "{{ any_on }}"
          sequence:
            - service: light.turn_off
              target:
                entity_id: "{{ lights | map(attribute='entity_id') | list }}"
      default:
        - service: script.scheduled_light_on
          data:
            room_key: "{{ room_key }}"
