room_toggle:
  alias: Room Toggle (smart)
  mode: parallel
  fields:
    room_key:
      description: Short name for the room (e.g., living_room)
    target_lights:
      description: Entity or group to control (entity_id, list, or target)
  sequence:
    - variables:
        # Normalize to a list but keep original ids for targeting
        _ids: >-
          {% if target_lights is mapping and 'entity_id' in target_lights %}
            {{ target_lights.entity_id }}
          {% else %}
            {{ target_lights }}
          {% endif %}
        id_list: >-
          {% if _ids is string %}
            {{ [_ids] }}
          {% elif _ids is sequence and _ids is not string %}
            {{ _ids | list }}
          {% else %}
            {{ [] }}
          {% endif %}
        expanded: "{{ expand(id_list) }}"
        any_on: "{{ expanded | selectattr('state','eq','on') | list | count > 0 }}"
    - choose:
        - conditions: "{{ any_on }}"
          sequence:
            - service: light.turn_off
              target:
                entity_id: "{{ id_list }}"
      default:
        - service: script.scheduled_light_on
          data:
            room_key: "{{ room_key }}"
            # provide usable fallback if scene is missing
            fallback_lights: "{{ id_list[0] if id_list|length>0 else '' }}"
