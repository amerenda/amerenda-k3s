apiVersion: v1
kind: ConfigMap
metadata:
  name: homeassistant-dashboards
data:
  room_schedule_viewer.yaml: |
    views:
      - title: Room Schedule Viewer
        path: room-schedule-viewer
        cards:
          - type: vertical-stack
            cards:
              # Room selector dropdown
              - type: entities
                title: Select Room
                entities:
                  - entity: input_select.room_selector
                    name: Room
    
          # Active Scene Status Card
          - type: markdown
            title: Current Status
            content: |
              {% set room = states('input_select.room_selector') %}
              {% if room and room != 'unknown' and room != 'unavailable' %}
                {% set morning_custom = states('input_boolean.' ~ room ~ '_morning_custom_time') %}
                {% set day_custom = states('input_boolean.' ~ room ~ '_day_custom_time') %}
                {% set evening_custom = states('input_boolean.' ~ room ~ '_evening_custom_time') %}
                {% set night_custom = states('input_boolean.' ~ room ~ '_night_custom_time') %}
                {% set s1 = states('input_datetime.' ~ room ~ '_s1_start') if morning_custom == 'on' else '06:00:00' %}
                {% set s2 = states('input_datetime.' ~ room ~ '_s2_start') if day_custom == 'on' else '09:00:00' %}
                {% set s3 = states('input_datetime.' ~ room ~ '_s3_start') if evening_custom == 'on' else '17:00:00' %}
                {% set s4 = states('input_datetime.' ~ room ~ '_s4_start') if night_custom == 'on' else '22:00:00' %}
                {% set now_ts = as_timestamp(now()) %}
                {% set s1_ts = as_timestamp(today_at(s1)) %}
                {% set s2_ts = as_timestamp(today_at(s2)) %}
                {% set s3_ts = as_timestamp(today_at(s3)) %}
                {% set s4_ts = as_timestamp(today_at(s4)) %}
                {% if now_ts >= s1_ts and now_ts < s2_ts %}
                  {% set scheduled_slot = 'morning' %}
                  {% set next_transition = s2[:5] %}
                  {% set next_slot = 'day' %}
                {% elif now_ts >= s2_ts and now_ts < s3_ts %}
                  {% set scheduled_slot = 'day' %}
                  {% set next_transition = s3[:5] %}
                  {% set next_slot = 'evening' %}
                {% elif now_ts >= s3_ts and now_ts < s4_ts %}
                  {% set scheduled_slot = 'evening' %}
                  {% set next_transition = s4[:5] %}
                  {% set next_slot = 'night' %}
                {% else %}
                  {% set scheduled_slot = 'night' %}
                  {% set next_transition = s1[:5] %}
                  {% set next_slot = 'morning' %}
                {% endif %}
                {% set scene_cycle_helper = 'input_select.' ~ room ~ '_scene_cycle' %}
                {% set scene_cycle = states(scene_cycle_helper) %}
                {% if scene_cycle and scene_cycle != 'unknown' and scene_cycle != 'unavailable' and scene_cycle in ['morning', 'day', 'evening', 'night'] %}
                  {% if scene_cycle != scheduled_slot %}
                    {% set current_slot = scene_cycle %}
                    {% set is_manual_override = true %}
                  {% else %}
                    {% set current_slot = scheduled_slot %}
                    {% set is_manual_override = false %}
                  {% endif %}
                {% else %}
                  {% set current_slot = scheduled_slot %}
                  {% set is_manual_override = false %}
                {% endif %}
                
                ### **{{ current_slot|title }} Scene Active**
                
                {% if is_manual_override %}
                  *Manual override active*
                {% else %}
                  *Scheduled scene*
                {% endif %}
                
                Next transition: **{{ next_transition }}** â†’ {{ next_slot|title }}
              {% else %}
                Please select a room above.
              {% endif %}
    
          # Manual Scene Control Buttons - Conditional cards per room
          - type: conditional
            conditions:
              - entity: input_select.room_selector
                state: bathroom
            card:
              type: horizontal-stack
              cards:
                    - type: button
                      name: Morning
                      icon: mdi:weather-sunset-up
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.bathroom_morning
                          helper_entity: input_select.bathroom_scene_cycle
                          slot_name: morning
                      show_state: false
                    - type: button
                      name: Day
                      icon: mdi:weather-sunny
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.bathroom_day
                          helper_entity: input_select.bathroom_scene_cycle
                          slot_name: day
                      show_state: false
                    - type: button
                      name: Evening
                      icon: mdi:weather-sunset-down
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.bathroom_evening
                          helper_entity: input_select.bathroom_scene_cycle
                          slot_name: evening
                      show_state: false
                    - type: button
                      name: Night
                      icon: mdi:weather-night
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.bathroom_night
                          helper_entity: input_select.bathroom_scene_cycle
                          slot_name: night
                      show_state: false
    
          - type: conditional
            conditions:
              - entity: input_select.room_selector
                state: bedroom
            card:
              type: horizontal-stack
              cards:
                    - type: button
                      name: Morning
                      icon: mdi:weather-sunset-up
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.bedroom_morning
                          helper_entity: input_select.bedroom_scene_cycle
                          slot_name: morning
                      show_state: false
                    - type: button
                      name: Day
                      icon: mdi:weather-sunny
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.bedroom_day
                          helper_entity: input_select.bedroom_scene_cycle
                          slot_name: day
                      show_state: false
                    - type: button
                      name: Evening
                      icon: mdi:weather-sunset-down
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.bedroom_evening
                          helper_entity: input_select.bedroom_scene_cycle
                          slot_name: evening
                      show_state: false
                    - type: button
                      name: Night
                      icon: mdi:weather-night
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.bedroom_night
                          helper_entity: input_select.bedroom_scene_cycle
                          slot_name: night
                      show_state: false
    
          - type: conditional
            conditions:
              - entity: input_select.room_selector
                state: hallway
            card:
              type: horizontal-stack
              cards:
                    - type: button
                      name: Morning
                      icon: mdi:weather-sunset-up
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.hallway_morning
                          helper_entity: input_select.hallway_scene_cycle
                          slot_name: morning
                      show_state: false
                    - type: button
                      name: Day
                      icon: mdi:weather-sunny
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.hallway_day
                          helper_entity: input_select.hallway_scene_cycle
                          slot_name: day
                      show_state: false
                    - type: button
                      name: Evening
                      icon: mdi:weather-sunset-down
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.hallway_evening
                          helper_entity: input_select.hallway_scene_cycle
                          slot_name: evening
                      show_state: false
                    - type: button
                      name: Night
                      icon: mdi:weather-night
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.hallway_night
                          helper_entity: input_select.hallway_scene_cycle
                          slot_name: night
                      show_state: false
    
          - type: conditional
            conditions:
              - entity: input_select.room_selector
                state: kitchen
            card:
              type: horizontal-stack
              cards:
                    - type: button
                      name: Morning
                      icon: mdi:weather-sunset-up
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.kitchen_morning
                          helper_entity: input_select.kitchen_scene_cycle
                          slot_name: morning
                      show_state: false
                    - type: button
                      name: Day
                      icon: mdi:weather-sunny
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.kitchen_day
                          helper_entity: input_select.kitchen_scene_cycle
                          slot_name: day
                      show_state: false
                    - type: button
                      name: Evening
                      icon: mdi:weather-sunset-down
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.kitchen_evening
                          helper_entity: input_select.kitchen_scene_cycle
                          slot_name: evening
                      show_state: false
                    - type: button
                      name: Night
                      icon: mdi:weather-night
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.kitchen_night
                          helper_entity: input_select.kitchen_scene_cycle
                          slot_name: night
                      show_state: false
    
          - type: conditional
            conditions:
              - entity: input_select.room_selector
                state: living_room
            card:
              type: horizontal-stack
              cards:
                    - type: button
                      name: Morning
                      icon: mdi:weather-sunset-up
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.living_room_morning
                          helper_entity: input_select.living_room_scene_cycle
                          slot_name: morning
                      show_state: false
                    - type: button
                      name: Day
                      icon: mdi:weather-sunny
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.living_room_day
                          helper_entity: input_select.living_room_scene_cycle
                          slot_name: day
                      show_state: false
                    - type: button
                      name: Evening
                      icon: mdi:weather-sunset-down
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.living_room_evening
                          helper_entity: input_select.living_room_scene_cycle
                          slot_name: evening
                      show_state: false
                    - type: button
                      name: Night
                      icon: mdi:weather-night
                      tap_action:
                        action: call-service
                        service: script.activate_scene_with_helper
                        service_data:
                          scene_entity: scene.living_room_night
                          helper_entity: input_select.living_room_scene_cycle
                          slot_name: night
                      show_state: false
    
          # Schedule Display
          - type: markdown
            title: Schedule
            content: |
              {% set room = states('input_select.room_selector') %}
              {% if room and room != 'unknown' and room != 'unavailable' %}
                {% set morning_custom = states('input_boolean.' ~ room ~ '_morning_custom_time') %}
                {% set day_custom = states('input_boolean.' ~ room ~ '_day_custom_time') %}
                {% set evening_custom = states('input_boolean.' ~ room ~ '_evening_custom_time') %}
                {% set night_custom = states('input_boolean.' ~ room ~ '_night_custom_time') %}
                {% if morning_custom == 'on' %}
                  {% set s1_raw = states('input_datetime.' ~ room ~ '_s1_start') %}
                  {% set s1 = s1_raw.split(' ')[-1][:5] if ' ' in s1_raw else (s1_raw[:5] if s1_raw|length >= 5 else '06:00') %}
                {% else %}
                  {% set s1 = '06:00' %}
                {% endif %}
                {% if day_custom == 'on' %}
                  {% set s2_raw = states('input_datetime.' ~ room ~ '_s2_start') %}
                  {% set s2 = s2_raw.split(' ')[-1][:5] if ' ' in s2_raw else (s2_raw[:5] if s2_raw|length >= 5 else '09:00') %}
                {% else %}
                  {% set s2 = '09:00' %}
                {% endif %}
                {% if evening_custom == 'on' %}
                  {% set s3_raw = states('input_datetime.' ~ room ~ '_s3_start') %}
                  {% set s3 = s3_raw.split(' ')[-1][:5] if ' ' in s3_raw else (s3_raw[:5] if s3_raw|length >= 5 else '17:00') %}
                {% else %}
                  {% set s3 = '17:00' %}
                {% endif %}
                {% if night_custom == 'on' %}
                  {% set s4_raw = states('input_datetime.' ~ room ~ '_s4_start') %}
                  {% set s4 = s4_raw.split(' ')[-1][:5] if ' ' in s4_raw else (s4_raw[:5] if s4_raw|length >= 5 else '22:00') %}
                {% else %}
                  {% set s4 = '22:00' %}
                {% endif %}
                
                {% set morning_override = states('input_select.' ~ room ~ '_morning_scene') %}
                {% set day_override = states('input_select.' ~ room ~ '_day_scene') %}
                {% set evening_override = states('input_select.' ~ room ~ '_evening_scene') %}
                {% set night_override = states('input_select.' ~ room ~ '_night_scene') %}
                
                {% set morning_scene = morning_override if morning_override not in ['unknown', 'unavailable', ''] else 'scene.' ~ room ~ '_morning' %}
                {% set day_scene = day_override if day_override not in ['unknown', 'unavailable', ''] else 'scene.' ~ room ~ '_day' %}
                {% set evening_scene = evening_override if evening_override not in ['unknown', 'unavailable', ''] else 'scene.' ~ room ~ '_evening' %}
                {% set night_scene = night_override if night_override not in ['unknown', 'unavailable', ''] else 'scene.' ~ room ~ '_night' %}
                
                {% set morning_enabled = states('input_boolean.enable_' ~ room ~ '_morning') %}
                {% set day_enabled = states('input_boolean.enable_' ~ room ~ '_day') %}
                {% set evening_enabled = states('input_boolean.enable_' ~ room ~ '_evening') %}
                {% set night_enabled = states('input_boolean.enable_' ~ room ~ '_night') %}
                
                {% set morning_auto_on = states('input_boolean.auto_on_' ~ room ~ '_morning') %}
                {% set day_auto_on = states('input_boolean.auto_on_' ~ room ~ '_day') %}
                {% set evening_auto_on = states('input_boolean.auto_on_' ~ room ~ '_evening') %}
                {% set night_auto_on = states('input_boolean.auto_on_' ~ room ~ '_night') %}
                
                {% set morning_motion = states('input_boolean.motion_activated_' ~ room ~ '_morning') %}
                {% set day_motion = states('input_boolean.motion_activated_' ~ room ~ '_day') %}
                {% set evening_motion = states('input_boolean.motion_activated_' ~ room ~ '_evening') %}
                {% set night_motion = states('input_boolean.motion_activated_' ~ room ~ '_night') %}
                
                | Time Slot | Scene | Activation Time | Timer Enabled | Auto-On | Motion Activated |
                |-----------|-------|----------------|---------------|---------|------------------|
                | Morning | `{{ morning_scene }}` | {{ s1 }} | {% if morning_enabled == 'on' %}âœ“{% else %}âœ—{% endif %} | {% if morning_auto_on == 'on' %}âœ“{% else %}âœ—{% endif %} | {% if morning_motion == 'on' %}âœ“{% else %}âœ—{% endif %} |
                | Day | `{{ day_scene }}` | {{ s2 }} | {% if day_enabled == 'on' %}âœ“{% else %}âœ—{% endif %} | {% if day_auto_on == 'on' %}âœ“{% else %}âœ—{% endif %} | {% if day_motion == 'on' %}âœ“{% else %}âœ—{% endif %} |
                | Evening | `{{ evening_scene }}` | {{ s3 }} | {% if evening_enabled == 'on' %}âœ“{% else %}âœ—{% endif %} | {% if evening_auto_on == 'on' %}âœ“{% else %}âœ—{% endif %} | {% if evening_motion == 'on' %}âœ“{% else %}âœ—{% endif %} |
                | Night | `{{ night_scene }}` | {{ s4 }} | {% if night_enabled == 'on' %}âœ“{% else %}âœ—{% endif %} | {% if night_auto_on == 'on' %}âœ“{% else %}âœ—{% endif %} | {% if night_motion == 'on' %}âœ“{% else %}âœ—{% endif %} |
                
                {% set any_custom = morning_custom == 'on' or day_custom == 'on' or evening_custom == 'on' or night_custom == 'on' %}
                {% if any_custom %}
                  *Custom schedule enabled*
                {% else %}
                  *Default schedule (06:00, 09:00, 17:00, 22:00)*
                {% endif %}
              {% else %}
                Please select a room above.
              {% endif %}
    
  room_schedule_configuration.yaml: |
    views:
      - title: Room Schedule Configuration
        path: room-schedule-configuration
        cards:
          - type: vertical-stack
            cards:
              # Room selector dropdown
              - type: entities
                title: Select Room
                entities:
                  - entity: input_select.room_selector
                    name: Room
    
              # Time Window selector dropdown
              - type: entities
                title: Select Time Window
                entities:
                  - entity: input_select.time_window_selector
                    name: Time Window
    
              # Morning Schedule Configuration
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: morning
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: bedroom
                  card:
                    type: entities
                    title: Morning Schedule
                    entities:
                      - entity: input_boolean.bedroom_morning_custom_time
                      - entity: input_datetime.bedroom_s1_start
                        name: Morning Start Time
                      - entity: input_select.bedroom_morning_scene
                      - entity: input_boolean.enable_bedroom_morning
                      - entity: input_boolean.auto_on_bedroom_morning
                      - entity: input_boolean.motion_activated_bedroom_morning
                      - entity: input_number.motion_auto_off_bedroom_morning
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: morning
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: living_room
                  card:
                    type: entities
                    title: Morning Schedule
                    entities:
                      - entity: input_boolean.living_room_morning_custom_time
                      - entity: input_datetime.living_room_s1_start
                      - entity: input_select.living_room_morning_scene
                      - entity: input_boolean.enable_living_room_morning
                      - entity: input_boolean.auto_on_living_room_morning
                      - entity: input_boolean.motion_activated_living_room_morning
                      - entity: input_number.motion_auto_off_living_room_morning
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: morning
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: kitchen
                  card:
                    type: entities
                    title: Morning Schedule
                    entities:
                      - entity: input_boolean.kitchen_morning_custom_time
                      - entity: input_datetime.kitchen_s1_start
                      - entity: input_select.kitchen_morning_scene
                      - entity: input_boolean.enable_kitchen_morning
                      - entity: input_boolean.auto_on_kitchen_morning
                      - entity: input_boolean.motion_activated_kitchen_morning
                      - entity: input_number.motion_auto_off_kitchen_morning
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: morning
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: bathroom
                  card:
                    type: entities
                    title: Morning Schedule
                    entities:
                      - entity: input_boolean.bathroom_morning_custom_time
                      - entity: input_datetime.bathroom_s1_start
                      - entity: input_select.bathroom_morning_scene
                      - entity: input_boolean.enable_bathroom_morning
                      - entity: input_boolean.auto_on_bathroom_morning
                      - entity: input_boolean.motion_activated_bathroom_morning
                      - entity: input_number.motion_auto_off_bathroom_morning
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: morning
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: hallway
                  card:
                    type: entities
                    title: Morning Schedule
                    entities:
                      - entity: input_boolean.hallway_morning_custom_time
                      - entity: input_datetime.hallway_s1_start
                      - entity: input_select.hallway_morning_scene
                      - entity: input_boolean.enable_hallway_morning
                      - entity: input_boolean.auto_on_hallway_morning
                      - entity: input_boolean.motion_activated_hallway_morning
                      - entity: input_number.motion_auto_off_hallway_morning
    
              # Day Schedule Configuration
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: day
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: bedroom
                  card:
                    type: entities
                    title: Day Schedule
                    entities:
                      - entity: input_boolean.bedroom_day_custom_time
                      - entity: input_datetime.bedroom_s2_start
                      - entity: input_select.bedroom_day_scene
                      - entity: input_boolean.enable_bedroom_day
                      - entity: input_boolean.auto_on_bedroom_day
                      - entity: input_boolean.motion_activated_bedroom_day
                      - entity: input_number.motion_auto_off_bedroom_day
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: day
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: living_room
                  card:
                    type: entities
                    title: Day Schedule
                    entities:
                      - entity: input_boolean.living_room_day_custom_time
                      - entity: input_datetime.living_room_s2_start
                      - entity: input_select.living_room_day_scene
                      - entity: input_boolean.enable_living_room_day
                      - entity: input_boolean.auto_on_living_room_day
                      - entity: input_boolean.motion_activated_living_room_day
                      - entity: input_number.motion_auto_off_living_room_day
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: day
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: kitchen
                  card:
                    type: entities
                    title: Day Schedule
                    entities:
                      - entity: input_boolean.kitchen_day_custom_time
                      - entity: input_datetime.kitchen_s2_start
                      - entity: input_select.kitchen_day_scene
                      - entity: input_boolean.enable_kitchen_day
                      - entity: input_boolean.auto_on_kitchen_day
                      - entity: input_boolean.motion_activated_kitchen_day
                      - entity: input_number.motion_auto_off_kitchen_day
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: day
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: bathroom
                  card:
                    type: entities
                    title: Day Schedule
                    entities:
                      - entity: input_boolean.bathroom_day_custom_time
                      - entity: input_datetime.bathroom_s2_start
                      - entity: input_select.bathroom_day_scene
                      - entity: input_boolean.enable_bathroom_day
                      - entity: input_boolean.auto_on_bathroom_day
                      - entity: input_boolean.motion_activated_bathroom_day
                      - entity: input_number.motion_auto_off_bathroom_day
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: day
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: hallway
                  card:
                    type: entities
                    title: Day Schedule
                    entities:
                      - entity: input_boolean.hallway_day_custom_time
                      - entity: input_datetime.hallway_s2_start
                      - entity: input_select.hallway_day_scene
                      - entity: input_boolean.enable_hallway_day
                      - entity: input_boolean.auto_on_hallway_day
                      - entity: input_boolean.motion_activated_hallway_day
                      - entity: input_number.motion_auto_off_hallway_day
    
              # Evening Schedule Configuration
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: evening
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: bedroom
                  card:
                    type: entities
                    title: Evening Schedule
                    entities:
                      - entity: input_boolean.bedroom_evening_custom_time
                      - entity: input_datetime.bedroom_s3_start
                      - entity: input_select.bedroom_evening_scene
                      - entity: input_boolean.enable_bedroom_evening
                      - entity: input_boolean.auto_on_bedroom_evening
                      - entity: input_boolean.motion_activated_bedroom_evening
                      - entity: input_number.motion_auto_off_bedroom_evening
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: evening
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: living_room
                  card:
                    type: entities
                    title: Evening Schedule
                    entities:
                      - entity: input_boolean.living_room_evening_custom_time
                      - entity: input_datetime.living_room_s3_start
                      - entity: input_select.living_room_evening_scene
                      - entity: input_boolean.enable_living_room_evening
                      - entity: input_boolean.auto_on_living_room_evening
                      - entity: input_boolean.motion_activated_living_room_evening
                      - entity: input_number.motion_auto_off_living_room_evening
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: evening
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: kitchen
                  card:
                    type: entities
                    title: Evening Schedule
                    entities:
                      - entity: input_boolean.kitchen_evening_custom_time
                      - entity: input_datetime.kitchen_s3_start
                      - entity: input_select.kitchen_evening_scene
                      - entity: input_boolean.enable_kitchen_evening
                      - entity: input_boolean.auto_on_kitchen_evening
                      - entity: input_boolean.motion_activated_kitchen_evening
                      - entity: input_number.motion_auto_off_kitchen_evening
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: evening
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: bathroom
                  card:
                    type: entities
                    title: Evening Schedule
                    entities:
                      - entity: input_boolean.bathroom_evening_custom_time
                      - entity: input_datetime.bathroom_s3_start
                      - entity: input_select.bathroom_evening_scene
                      - entity: input_boolean.enable_bathroom_evening
                      - entity: input_boolean.auto_on_bathroom_evening
                      - entity: input_boolean.motion_activated_bathroom_evening
                      - entity: input_number.motion_auto_off_bathroom_evening
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: evening
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: hallway
                  card:
                    type: entities
                    title: Evening Schedule
                    entities:
                      - entity: input_boolean.hallway_evening_custom_time
                      - entity: input_datetime.hallway_s3_start
                      - entity: input_select.hallway_evening_scene
                      - entity: input_boolean.enable_hallway_evening
                      - entity: input_boolean.auto_on_hallway_evening
                      - entity: input_boolean.motion_activated_hallway_evening
                      - entity: input_number.motion_auto_off_hallway_evening
    
              # Night Schedule Configuration
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: night
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: bedroom
                  card:
                    type: entities
                    title: Night Schedule
                    entities:
                      - entity: input_boolean.bedroom_night_custom_time
                      - entity: input_datetime.bedroom_s4_start
                      - entity: input_select.bedroom_night_scene
                      - entity: input_boolean.enable_bedroom_night
                      - entity: input_boolean.auto_on_bedroom_night
                      - entity: input_boolean.motion_activated_bedroom_night
                      - entity: input_number.motion_auto_off_bedroom_night
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: night
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: living_room
                  card:
                    type: entities
                    title: Night Schedule
                    entities:
                      - entity: input_boolean.living_room_night_custom_time
                      - entity: input_datetime.living_room_s4_start
                      - entity: input_select.living_room_night_scene
                      - entity: input_boolean.enable_living_room_night
                      - entity: input_boolean.auto_on_living_room_night
                      - entity: input_boolean.motion_activated_living_room_night
                      - entity: input_number.motion_auto_off_living_room_night
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: night
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: kitchen
                  card:
                    type: entities
                    title: Night Schedule
                    entities:
                      - entity: input_boolean.kitchen_night_custom_time
                      - entity: input_datetime.kitchen_s4_start
                      - entity: input_select.kitchen_night_scene
                      - entity: input_boolean.enable_kitchen_night
                      - entity: input_boolean.auto_on_kitchen_night
                      - entity: input_boolean.motion_activated_kitchen_night
                      - entity: input_number.motion_auto_off_kitchen_night
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: night
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: bathroom
                  card:
                    type: entities
                    title: Night Schedule
                    entities:
                      - entity: input_boolean.bathroom_night_custom_time
                      - entity: input_datetime.bathroom_s4_start
                      - entity: input_select.bathroom_night_scene
                      - entity: input_boolean.enable_bathroom_night
                      - entity: input_boolean.auto_on_bathroom_night
                      - entity: input_boolean.motion_activated_bathroom_night
                      - entity: input_number.motion_auto_off_bathroom_night
              - type: conditional
                conditions:
                  - entity: input_select.time_window_selector
                    state: night
                card:
                  type: conditional
                  conditions:
                    - entity: input_select.room_selector
                      state: hallway
                  card:
                    type: entities
                    title: Night Schedule
                    entities:
                      - entity: input_boolean.hallway_night_custom_time
                      - entity: input_datetime.hallway_s4_start
                      - entity: input_select.hallway_night_scene
                      - entity: input_boolean.enable_hallway_night
                      - entity: input_boolean.auto_on_hallway_night
                      - entity: input_boolean.motion_activated_hallway_night
                      - entity: input_number.motion_auto_off_hallway_night
  light_control.yaml: |
    views:
      - title: Light Control
        path: light-control
        cards:
          - type: vertical-stack
            cards:
              # Room selector
              - type: entities
                title: Select Room
                entities:
                  - entity: input_select.room_selector
                    name: Room
    
              # Dynamic Room Info
              - type: markdown
                title: Room Lighting Control
                content: |
                  {% set room = states('input_select.room_selector') %}
                  {% if room and room != 'unknown' and room != 'unavailable' %}
                    ### {{ room|replace('_',' ')|title }} Lighting
                    
                    Use the controls below to:
                    - Turn all room lights on/off
                    - Adjust individual lights
                    - Create a scene from current light states
                  {% else %}
                    Please select a room above.
                  {% endif %}
    
              # Room Group Control Buttons - dynamically discover lights per room
              - type: grid
                square: false
                columns: 2
                cards:
                  - type: custom:mushroom-button-card
                    icon: mdi:lightbulb-group
                    label: "{% set room = states('input_select.room_selector') %}{% if room and room != 'unknown' and room != 'unavailable' %}All {{ room | replace('_', ' ') | title }} Lights On{% else %}All Lights On{% endif %}"
                    tap_action:
                      action: call-service
                      service: light.turn_on
                      service_data:
                        entity_id: >
                          {% set room = states('input_select.room_selector') %}
                          {% if room and room != 'unknown' and room != 'unavailable' %}
                            {% set room_key = room %}
                            {% set all_lights = states.light | map(attribute='entity_id') | list %}
                            {% set room_lights = [] %}
                            {% if room_key == 'hallway' %}
                              {% for light_id in ['light.hallway', 'light.entrance_lights'] %}
                                {% if light_id in all_lights %}
                                  {% set _ = room_lights.append(light_id) %}
                                {% endif %}
                              {% endfor %}
                            {% else %}
                              {% set main_light = 'light.' ~ room_key %}
                              {% set numbered_lights = [] %}
                              {% for i in range(1, 10) %}
                                {% set numbered_light = 'light.' ~ room_key ~ '_' ~ i %}
                                {% if numbered_light in all_lights %}
                                  {% set _ = numbered_lights.append(numbered_light) %}
                                {% endif %}
                              {% endfor %}
                              {% if numbered_lights | length == 1 and main_light in all_lights %}
                                {% set _ = room_lights.append(numbered_lights[0]) %}
                              {% elif numbered_lights | length > 1 %}
                                {% for light_id in numbered_lights %}
                                  {% set _ = room_lights.append(light_id) %}
                                {% endfor %}
                              {% elif main_light in all_lights %}
                                {% set _ = room_lights.append(main_light) %}
                              {% else %}
                                {% for light_id in numbered_lights %}
                                  {% set _ = room_lights.append(light_id) %}
                                {% endfor %}
                              {% endif %}
                            {% endif %}
                            {{ room_lights }}
                          {% else %}
                            []
                          {% endif %}
                  - type: custom:mushroom-button-card
                    icon: mdi:lightbulb-group-off
                    label: "{% set room = states('input_select.room_selector') %}{% if room and room != 'unknown' and room != 'unavailable' %}All {{ room | replace('_', ' ') | title }} Lights Off{% else %}All Lights Off{% endif %}"
                    tap_action:
                      action: call-service
                      service: light.turn_off
                      service_data:
                        entity_id: >
                          {% set room = states('input_select.room_selector') %}
                          {% if room and room != 'unknown' and room != 'unavailable' %}
                            {% set room_key = room %}
                            {% set all_lights = states.light | map(attribute='entity_id') | list %}
                            {% set room_lights = [] %}
                            {% if room_key == 'hallway' %}
                              {% for light_id in ['light.hallway', 'light.entrance_lights'] %}
                                {% if light_id in all_lights %}
                                  {% set _ = room_lights.append(light_id) %}
                                {% endif %}
                              {% endfor %}
                            {% else %}
                              {% set main_light = 'light.' ~ room_key %}
                              {% set numbered_lights = [] %}
                              {% for i in range(1, 10) %}
                                {% set numbered_light = 'light.' ~ room_key ~ '_' ~ i %}
                                {% if numbered_light in all_lights %}
                                  {% set _ = numbered_lights.append(numbered_light) %}
                                {% endif %}
                              {% endfor %}
                              {% if numbered_lights | length == 1 and main_light in all_lights %}
                                {% set _ = room_lights.append(numbered_lights[0]) %}
                              {% elif numbered_lights | length > 1 %}
                                {% for light_id in numbered_lights %}
                                  {% set _ = room_lights.append(light_id) %}
                                {% endfor %}
                              {% elif main_light in all_lights %}
                                {% set _ = room_lights.append(main_light) %}
                              {% else %}
                                {% for light_id in numbered_lights %}
                                  {% set _ = room_lights.append(light_id) %}
                                {% endfor %}
                              {% endif %}
                            {% endif %}
                            {{ room_lights }}
                          {% else %}
                            []
                          {% endif %}
    
              # Individual Lights - dynamically discovered based on selected room
              - type: conditional
                conditions:
                  - entity: input_select.room_selector
                    state_not: unknown
                card:
                  type: grid
                  square: false
                  columns: 2
                  cards:
                    # Smart logic: if only one numbered light exists with main, show numbered only
                    - type: conditional
                      conditions:
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' %}
                              {% set room_key = room %}
                              {% set all_lights = states.light | map(attribute='entity_id') | list %}
                              {% set main_light = 'light.' ~ room_key %}
                              {% if room_key == 'hallway' %}
                                {{ false }}
                              {% else %}
                                {% set numbered_lights = [] %}
                                {% for i in range(1, 10) %}
                                  {% set numbered_light = 'light.' ~ room_key ~ '_' ~ i %}
                                  {% if numbered_light in all_lights %}
                                    {% set _ = numbered_lights.append(numbered_light) %}
                                  {% endif %}
                                {% endfor %}
                                {{ numbered_lights | length == 1 and main_light in all_lights }}
                              {% endif %}
                            {% else %}
                              {{ false }}
                            {% endif %}
                      card:
                        type: custom:mushroom-light-card
                        entity: >
                          {% set room = states('input_select.room_selector') %}
                          {% set room_key = room %}
                          {% set all_lights = states.light | map(attribute='entity_id') | list %}
                          {% set numbered_lights = [] %}
                          {% for i in range(1, 10) %}
                            {% set numbered_light = 'light.' ~ room_key ~ '_' ~ i %}
                            {% if numbered_light in all_lights %}
                              {% set _ = numbered_lights.append(numbered_light) %}
                            {% endif %}
                          {% endfor %}
                          {{ numbered_lights[0] if numbered_lights | length == 1 else 'light.' ~ room_key }}
                        name: >
                          {% set room = states('input_select.room_selector') %}
                          {{ room | replace('_', ' ') | title }}
                        show_brightness_control: true
                        show_color_control: true
                        show_color_temp_control: true
                    # Show main light if it exists and (no numbered or multiple numbered)
                    - type: conditional
                      conditions:
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' %}
                              {% set room_key = room %}
                              {% set all_lights = states.light | map(attribute='entity_id') | list %}
                              {% if room_key == 'hallway' %}
                                {{ false }}
                              {% else %}
                                {% set main_light = 'light.' ~ room_key %}
                                {% set numbered_lights = [] %}
                                {% for i in range(1, 10) %}
                                  {% set numbered_light = 'light.' ~ room_key ~ '_' ~ i %}
                                  {% if numbered_light in all_lights %}
                                    {% set _ = numbered_lights.append(numbered_light) %}
                                  {% endif %}
                                {% endfor %}
                                {{ main_light in all_lights and (numbered_lights | length == 0 or numbered_lights | length > 1) }}
                              {% endif %}
                            {% else %}
                              {{ false }}
                            {% endif %}
                      card:
                        type: custom:mushroom-light-card
                        entity: >
                          {% set room = states('input_select.room_selector') %}
                          {% if room and room != 'unknown' and room != 'unavailable' %}
                            light.{{ room }}
                          {% else %}
                            light.bedroom
                          {% endif %}
                        name: >
                          {% set room = states('input_select.room_selector') %}
                          {{ room | replace('_', ' ') | title }}
                        show_brightness_control: true
                        show_color_control: true
                        show_color_temp_control: true
                    # Show numbered lights if they exist (for multiple numbered lights case)
                    # Dynamically check numbered lights 1-9 based on selected room
                    - type: conditional
                      conditions:
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {% set all_lights = states.light | map(attribute='entity_id') | list %}
                              {% set numbered_lights = [] %}
                              {% for i in range(1, 10) %}
                                {% set numbered_light = 'light.' ~ room ~ '_' ~ i %}
                                {% if numbered_light in all_lights %}
                                  {% set _ = numbered_lights.append(numbered_light) %}
                                {% endif %}
                              {% endfor %}
                              {{ numbered_lights | length > 1 }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {{ states('light.' ~ room ~ '_1') != 'unavailable' }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                      card:
                        type: custom:mushroom-light-card
                        entity: >
                          {% set room = states('input_select.room_selector') %}
                          light.{{ room }}_1
                        name: >
                          {% set room = states('input_select.room_selector') %}
                          {{ room | replace('_', ' ') | title }} Light 1
                        show_brightness_control: true
                        show_color_control: true
                        show_color_temp_control: true
                    - type: conditional
                      conditions:
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {% set all_lights = states.light | map(attribute='entity_id') | list %}
                              {% set numbered_lights = [] %}
                              {% for i in range(1, 10) %}
                                {% set numbered_light = 'light.' ~ room ~ '_' ~ i %}
                                {% if numbered_light in all_lights %}
                                  {% set _ = numbered_lights.append(numbered_light) %}
                                {% endif %}
                              {% endfor %}
                              {{ numbered_lights | length > 1 }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {{ states('light.' ~ room ~ '_2') != 'unavailable' }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                      card:
                        type: custom:mushroom-light-card
                        entity: >
                          {% set room = states('input_select.room_selector') %}
                          light.{{ room }}_2
                        name: >
                          {% set room = states('input_select.room_selector') %}
                          {{ room | replace('_', ' ') | title }} Light 2
                        show_brightness_control: true
                        show_color_control: true
                        show_color_temp_control: true
                    - type: conditional
                      conditions:
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {% set all_lights = states.light | map(attribute='entity_id') | list %}
                              {% set numbered_lights = [] %}
                              {% for i in range(1, 10) %}
                                {% set numbered_light = 'light.' ~ room ~ '_' ~ i %}
                                {% if numbered_light in all_lights %}
                                  {% set _ = numbered_lights.append(numbered_light) %}
                                {% endif %}
                              {% endfor %}
                              {{ numbered_lights | length > 1 }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {{ states('light.' ~ room ~ '_3') != 'unavailable' }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                      card:
                        type: custom:mushroom-light-card
                        entity: >
                          {% set room = states('input_select.room_selector') %}
                          light.{{ room }}_3
                        name: >
                          {% set room = states('input_select.room_selector') %}
                          {{ room | replace('_', ' ') | title }} Light 3
                        show_brightness_control: true
                        show_color_control: true
                        show_color_temp_control: true
                    - type: conditional
                      conditions:
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {% set all_lights = states.light | map(attribute='entity_id') | list %}
                              {% set numbered_lights = [] %}
                              {% for i in range(1, 10) %}
                                {% set numbered_light = 'light.' ~ room ~ '_' ~ i %}
                                {% if numbered_light in all_lights %}
                                  {% set _ = numbered_lights.append(numbered_light) %}
                                {% endif %}
                              {% endfor %}
                              {{ numbered_lights | length > 1 }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {{ states('light.' ~ room ~ '_4') != 'unavailable' }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                      card:
                        type: custom:mushroom-light-card
                        entity: >
                          {% set room = states('input_select.room_selector') %}
                          light.{{ room }}_4
                        name: >
                          {% set room = states('input_select.room_selector') %}
                          {{ room | replace('_', ' ') | title }} Light 4
                        show_brightness_control: true
                        show_color_control: true
                        show_color_temp_control: true
                    - type: conditional
                      conditions:
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {% set all_lights = states.light | map(attribute='entity_id') | list %}
                              {% set numbered_lights = [] %}
                              {% for i in range(1, 10) %}
                                {% set numbered_light = 'light.' ~ room ~ '_' ~ i %}
                                {% if numbered_light in all_lights %}
                                  {% set _ = numbered_lights.append(numbered_light) %}
                                {% endif %}
                              {% endfor %}
                              {{ numbered_lights | length > 1 }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {{ states('light.' ~ room ~ '_5') != 'unavailable' }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                      card:
                        type: custom:mushroom-light-card
                        entity: >
                          {% set room = states('input_select.room_selector') %}
                          light.{{ room }}_5
                        name: >
                          {% set room = states('input_select.room_selector') %}
                          {{ room | replace('_', ' ') | title }} Light 5
                        show_brightness_control: true
                        show_color_control: true
                        show_color_temp_control: true
                    - type: conditional
                      conditions:
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {% set all_lights = states.light | map(attribute='entity_id') | list %}
                              {% set numbered_lights = [] %}
                              {% for i in range(1, 10) %}
                                {% set numbered_light = 'light.' ~ room ~ '_' ~ i %}
                                {% if numbered_light in all_lights %}
                                  {% set _ = numbered_lights.append(numbered_light) %}
                                {% endif %}
                              {% endfor %}
                              {{ numbered_lights | length > 1 }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {{ states('light.' ~ room ~ '_6') != 'unavailable' }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                      card:
                        type: custom:mushroom-light-card
                        entity: >
                          {% set room = states('input_select.room_selector') %}
                          light.{{ room }}_6
                        name: >
                          {% set room = states('input_select.room_selector') %}
                          {{ room | replace('_', ' ') | title }} Light 6
                        show_brightness_control: true
                        show_color_control: true
                        show_color_temp_control: true
                    - type: conditional
                      conditions:
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {% set all_lights = states.light | map(attribute='entity_id') | list %}
                              {% set numbered_lights = [] %}
                              {% for i in range(1, 10) %}
                                {% set numbered_light = 'light.' ~ room ~ '_' ~ i %}
                                {% if numbered_light in all_lights %}
                                  {% set _ = numbered_lights.append(numbered_light) %}
                                {% endif %}
                              {% endfor %}
                              {{ numbered_lights | length > 1 }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {{ states('light.' ~ room ~ '_7') != 'unavailable' }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                      card:
                        type: custom:mushroom-light-card
                        entity: >
                          {% set room = states('input_select.room_selector') %}
                          light.{{ room }}_7
                        name: >
                          {% set room = states('input_select.room_selector') %}
                          {{ room | replace('_', ' ') | title }} Light 7
                        show_brightness_control: true
                        show_color_control: true
                        show_color_temp_control: true
                    - type: conditional
                      conditions:
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {% set all_lights = states.light | map(attribute='entity_id') | list %}
                              {% set numbered_lights = [] %}
                              {% for i in range(1, 10) %}
                                {% set numbered_light = 'light.' ~ room ~ '_' ~ i %}
                                {% if numbered_light in all_lights %}
                                  {% set _ = numbered_lights.append(numbered_light) %}
                                {% endif %}
                              {% endfor %}
                              {{ numbered_lights | length > 1 }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {{ states('light.' ~ room ~ '_8') != 'unavailable' }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                      card:
                        type: custom:mushroom-light-card
                        entity: >
                          {% set room = states('input_select.room_selector') %}
                          light.{{ room }}_8
                        name: >
                          {% set room = states('input_select.room_selector') %}
                          {{ room | replace('_', ' ') | title }} Light 8
                        show_brightness_control: true
                        show_color_control: true
                        show_color_temp_control: true
                    - type: conditional
                      conditions:
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {% set all_lights = states.light | map(attribute='entity_id') | list %}
                              {% set numbered_lights = [] %}
                              {% for i in range(1, 10) %}
                                {% set numbered_light = 'light.' ~ room ~ '_' ~ i %}
                                {% if numbered_light in all_lights %}
                                  {% set _ = numbered_lights.append(numbered_light) %}
                                {% endif %}
                              {% endfor %}
                              {{ numbered_lights | length > 1 }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                        - condition: template
                          value_template: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' and room != 'hallway' %}
                              {{ states('light.' ~ room ~ '_9') != 'unavailable' }}
                            {% else %}
                              {{ false }}
                            {% endif %}
                      card:
                        type: custom:mushroom-light-card
                        entity: >
                          {% set room = states('input_select.room_selector') %}
                          light.{{ room }}_9
                        name: >
                          {% set room = states('input_select.room_selector') %}
                          {{ room | replace('_', ' ') | title }} Light 9
                        show_brightness_control: true
                        show_color_control: true
                        show_color_temp_control: true
                    # Hallway special case
                    - type: conditional
                      conditions:
                        - entity: input_select.room_selector
                          state: hallway
                        - condition: template
                          value_template: "{{ states('light.hallway') != 'unavailable' }}"
                      card:
                        type: custom:mushroom-light-card
                        entity: light.hallway
                        name: Hallway
                        show_brightness_control: true
                        show_color_control: true
                        show_color_temp_control: true
                    - type: conditional
                      conditions:
                        - entity: input_select.room_selector
                          state: hallway
                        - condition: template
                          value_template: "{{ states('light.entrance_lights') != 'unavailable' }}"
                      card:
                        type: custom:mushroom-light-card
                        entity: light.entrance_lights
                        name: Entrance Lights
                        show_brightness_control: true
                        show_color_control: true
                        show_color_temp_control: true
    
              # Scene Creation Section
              - type: markdown
                title: Create Scene
                content: |
                  Adjust the lights above to your desired settings, then:
                  1. Enter a scene name below
                  2. Click "Create Scene" to save the current state
    
              # Scene Creation - dynamically discovered lights
              - type: conditional
                conditions:
                  - entity: input_select.room_selector
                    state_not: unknown
                card:
                  type: entities
                  title: >
                    {% set room = states('input_select.room_selector') %}
                    {% if room and room != 'unknown' and room != 'unavailable' %}
                      {{ room | replace('_', ' ') | title }} Scene Creation
                    {% else %}
                      Scene Creation
                    {% endif %}
                  entities:
                    - entity: >
                        {% set room = states('input_select.room_selector') %}
                        {% if room and room != 'unknown' and room != 'unavailable' %}
                          input_text.scene_name_{{ room }}
                        {% else %}
                          input_text.scene_name_bedroom
                        {% endif %}
                      name: Scene Name
                    - type: button
                      name: Create Scene from Current Lights
                      icon: mdi:content-save
                      tap_action:
                        action: call-service
                        service: script.create_scene_from_lights
                        service_data:
                          scene_name: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' %}
                              {{ states('input_text.scene_name_' ~ room) }}
                            {% else %}
                              {{ states('input_text.scene_name_bedroom') }}
                            {% endif %}
                          scene_id: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' %}
                              {{ room }}_{{ states('input_text.scene_name_' ~ room) | lower | replace(' ', '_') }}
                            {% else %}
                              bedroom_{{ states('input_text.scene_name_bedroom') | lower | replace(' ', '_') }}
                            {% endif %}
                          light_entities: >
                            {% set room = states('input_select.room_selector') %}
                            {% if room and room != 'unknown' and room != 'unavailable' %}
                              {% set room_key = room %}
                              {% set all_lights = states.light | map(attribute='entity_id') | list %}
                              {% set room_lights = [] %}
                              {% if room_key == 'hallway' %}
                                {% for light_id in ['light.hallway', 'light.entrance_lights'] %}
                                  {% if light_id in all_lights %}
                                    {% set _ = room_lights.append(light_id) %}
                                  {% endif %}
                                {% endfor %}
                              {% else %}
                                {% set main_light = 'light.' ~ room_key %}
                                {% set numbered_lights = [] %}
                                {% for i in range(1, 10) %}
                                  {% set numbered_light = 'light.' ~ room_key ~ '_' ~ i %}
                                  {% if numbered_light in all_lights %}
                                    {% set _ = numbered_lights.append(numbered_light) %}
                                  {% endif %}
                                {% endfor %}
                                {% if numbered_lights | length == 1 and main_light in all_lights %}
                                  {% set _ = room_lights.append(numbered_lights[0]) %}
                                {% elif numbered_lights | length > 1 %}
                                  {% for light_id in numbered_lights %}
                                    {% set _ = room_lights.append(light_id) %}
                                  {% endfor %}
                                {% elif main_light in all_lights %}
                                  {% set _ = room_lights.append(main_light) %}
                                {% else %}
                                  {% for light_id in numbered_lights %}
                                    {% set _ = room_lights.append(light_id) %}
                                  {% endfor %}
                                {% endif %}
                              {% endif %}
                              {{ room_lights }}
                            {% else %}
                              []
                            {% endif %}
